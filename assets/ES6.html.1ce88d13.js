import{_ as e}from"./plugin-vue_export-helper.21dcd24c.js";import{o,c,a as n,b as t,d as s,e as p,r as l}from"./app.74036a65.js";var i="/blog/assets/20200917174632151_32696.b5c4c3b9.png",u="/blog/assets/20201107175400817_28717.bf1d13cd.png",r="/blog/assets/20201108171756206_10658.91e9608c.png",k="/blog/assets/20201108171440694_32362.1423e61e.png",d="/blog/assets/20201108171557398_9115.8f1dd2e2.png";const v={},m=n("h1",{id:"ecmascript6",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#ecmascript6","aria-hidden":"true"},"#"),s(" ECMAScript6+")],-1),b=n("p",null,"\u3010\u6CE8\u3011\u6B64\u5904ES6\u6CDB\u6307ES6\uFF08ES5\uFF09\u4E4B\u540E\u6240\u6709\u7248\u672C\u7684\u65B0\u7279\u6027",-1),g=n("h2",{id:"\u4E00-es6\u57FA\u7840\u8BED\u6CD5",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u4E00-es6\u57FA\u7840\u8BED\u6CD5","aria-hidden":"true"},"#"),s(" \u4E00 ES6\u57FA\u7840\u8BED\u6CD5")],-1),f=s("ECMAScript2015~2020\u8BED\u6CD5\u5168\u89E3\u6790: "),y={href:"http://es.xiecheng.live/",target:"_blank",rel:"noopener noreferrer"},h=s("http://es.xiecheng.live/"),x=p(`<h3 id="_1-\u53D8\u91CF\u53CA\u89E3\u6784\u8D4B\u503C" tabindex="-1"><a class="header-anchor" href="#_1-\u53D8\u91CF\u53CA\u89E3\u6784\u8D4B\u503C" aria-hidden="true">#</a> 1. \u53D8\u91CF\u53CA\u89E3\u6784\u8D4B\u503C</h3><table><thead><tr><th>\u5173\u952E\u5B57</th><th>\u7C7B\u578B</th><th>\u5B9A\u4E49</th><th>\u53EF\u53D8\u6027</th><th>\u4F5C\u7528\u57DF</th></tr></thead><tbody><tr><td>var</td><td>\u53D8\u91CF\uFF08\u65E7\uFF09</td><td>\u53EF\u4EE5\u91CD\u590D\u5B9A\u4E49</td><td>\u4E0D\u80FD\u9650\u5236\u4FEE\u6539</td><td>\u51FD\u6570\u7EA7\u4F5C\u7528\u57DF</td></tr><tr><td>let</td><td>\u53D8\u91CF</td><td>\u4E0D\u80FD\u91CD\u590D\u5B9A\u4E49</td><td>\u53EF\u4EE5\u4FEE\u6539</td><td>\u5757\u7EA7\u4F5C\u7528\u57DF</td></tr><tr><td>const</td><td>\u5E38\u91CF</td><td>\u4E0D\u80FD\u91CD\u590D\u5B9A\u4E49</td><td>\u4E0D\u53EF\u4FEE\u6539</td><td>\u5757\u7EA7\u4F5C\u7528\u57DF</td></tr></tbody></table><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u89E3\u6784\u8D4B\u503C:</span>
<span class="token comment">// \u4E24\u8FB9\u7ED3\u6784\u5FC5\u987B\u4E00\u6837 </span>
<span class="token keyword">let</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">45</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token comment">//\u6570\u7EC4</span>
<span class="token keyword">let</span> <span class="token punctuation">{</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token literal-property property">b</span><span class="token operator">:</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token literal-property property">c</span><span class="token operator">:</span><span class="token number">22</span><span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token comment">//json</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u3010\u5C0F\u7ED3\u3011</strong></p><ul><li>\u89E3\u6784\u8D4B\u503C\u5C31\u662F\u628A\u6570\u636E\u7ED3\u6784\u5206\u89E3\uFF0C\u7136\u540E\u7ED9\u53D8\u91CF\u8FDB\u884C\u8D4B\u503C</li><li>\u5982\u679C\u7ED3\u6784\u4E0D\u6210\u529F\uFF0C\u53D8\u91CF\u8DDF\u6570\u503C\u4E2A\u6570\u4E0D\u5339\u914D\u7684\u65F6\u5019\uFF0C\u53D8\u91CF\u7684\u503C\u4E3Aundefined</li><li>\u6570\u7EC4\u89E3\u6784\u7528\u4E2D\u62EC\u53F7\u5305\u88F9\uFF0C\u591A\u4E2A\u53D8\u91CF\u7528\u9017\u53F7\u9694\u5F00\uFF0C\u5BF9\u8C61\u89E3\u6784\u7528\u82B1\u62EC\u53F7\u5305\u88F9\uFF0C\u591A\u4E2A\u53D8\u91CF\u7528\u9017\u53F7\u9694\u5F00</li><li>\u5229\u7528\u89E3\u6784\u8D4B\u503C\u80FD\u591F\u8BA9\u6211\u4EEC\u65B9\u4FBF\u7684\u53BB\u53D6\u5BF9\u8C61\u4E2D\u7684\u5C5E\u6027\u8DDF\u65B9\u6CD5</li></ul><p><strong>\u5269\u4F59\u53C2\u6570</strong></p><p>\u5269\u4F59\u53C2\u6570\u8BED\u6CD5\u5141\u8BB8\u6211\u4EEC\u5C06\u4E00\u4E2A\u4E0D\u5B9A\u6570\u91CF\u7684\u53C2\u6570\u8868\u793A\u4E3A\u4E00\u4E2A\u6570\u7EC4\uFF0C\u4E0D\u5B9A\u53C2\u6570\u5B9A\u4E49\u65B9\u5F0F\uFF0C\u8FD9\u79CD\u65B9\u5F0F\u5F88\u65B9\u4FBF\u7684\u53BB\u58F0\u660E\u4E0D\u77E5\u9053\u53C2\u6570\u60C5\u51B5\u4E0B\u7684\u4E00\u4E2A\u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">sum</span> <span class="token punctuation">(</span><span class="token parameter">first<span class="token punctuation">,</span> <span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>first<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 10</span>
     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [20, 30] </span>
 <span class="token punctuation">}</span>
 <span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u5269\u4F59\u53C2\u6570\u548C\u89E3\u6784\u914D\u5408\u4F7F\u7528</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> students <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;wangwu&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;zhangsan&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;lisi&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> <span class="token punctuation">[</span>s1<span class="token punctuation">,</span> <span class="token operator">...</span>s2<span class="token punctuation">]</span> <span class="token operator">=</span> students<span class="token punctuation">;</span> 
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// &#39;wangwu&#39; </span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s2<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// [&#39;zhangsan&#39;, &#39;lisi&#39;]</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-\u51FD\u6570\u53CA\u53C2\u6570\u5C55\u5F00" tabindex="-1"><a class="header-anchor" href="#_2-\u51FD\u6570\u53CA\u53C2\u6570\u5C55\u5F00" aria-hidden="true">#</a> 2. \u51FD\u6570\u53CA\u53C2\u6570\u5C55\u5F00</h3><p><strong>\uFF081\uFF09\u7BAD\u5934\u51FD\u6570</strong> \uFF08\u7B80\u5316\uFF0C\u4FEE\u6B63this\uFF09</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">functionName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>  <span class="token comment">//\u5E38\u89C4\u5199\u6CD5</span>
<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>       <span class="token comment">//\u7BAD\u5934\u51FD\u6570</span>

<span class="token comment">//\u7BAD\u5934\u51FD\u6570\uFF1A</span>
<span class="token comment">// \u8868\u8FBE\u5F0F\u5728\u53F3\u4FA7</span>
<span class="token keyword">let</span> <span class="token function-variable function">sum</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>  <span class="token comment">//\u7701\u7565return</span>

<span class="token comment">// \u6216\u5E26 {...} \u7684\u591A\u884C\u8BED\u6CD5\uFF0C\u6B64\u5904\u9700\u8981 return\uFF1A</span>
<span class="token keyword">let</span> <span class="token function-variable function">sum</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6CA1\u6709\u53C2\u6570</span>
<span class="token keyword">let</span> <span class="token function-variable function">sayHi</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;Hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u6709\u4E00\u4E2A\u53C2\u6570</span>
<span class="token keyword">let</span> <span class="token function-variable function">double</span> <span class="token operator">=</span> <span class="token parameter">n</span> <span class="token operator">=&gt;</span> n <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>  <span class="token comment">//\u7701\u7565\u62EC\u53F7\u548Creturn</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\uFF082\uFF09\u53C2\u6570\u5C55\u5F00</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//\u4F5C\u4E3A\u51FD\u6570\u5F62\u53C2\u65F6\uFF1A</span>
<span class="token keyword">function</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b <span class="token punctuation">,</span> <span class="token operator">...</span>args</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> args<span class="token punctuation">)</span>      
<span class="token punctuation">}</span>
<span class="token function">show</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">43</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">41</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">44</span><span class="token punctuation">,</span><span class="token number">66</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">)</span> <span class="token comment">// 11 2 [3, 43, 22, 41, 6, 8, 44, 66, 33]</span>

<span class="token comment">//\u4F5C\u4E3A\u51FD\u6570\u5B9E\u53C2\u65F6\uFF1A</span>
<span class="token keyword">let</span> arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">]</span>
<span class="token keyword">function</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">print</span><span class="token punctuation">(</span><span class="token operator">...</span>arr1<span class="token punctuation">)</span>              <span class="token comment">// 12 33 21</span>

<span class="token comment">// \u6570\u7EC4\u66FF\u6362\u573A\u666F</span>
<span class="token keyword">let</span> arr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">61</span><span class="token punctuation">]</span>
<span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>arr1<span class="token punctuation">,</span> <span class="token operator">...</span>arr2<span class="token punctuation">]</span> <span class="token comment">// \u672C\u8D28\u4E0A\u5C31\u662F\u7B80\u5355\u7684\u66FF\u6362</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>             <span class="token comment">//[12, 33, 21, 2, 4, 61]</span>

<span class="token comment">//\u5BF9\u8C61\u4E2D\u540C\u6837\u53EF\u4EE5\u5E94\u7528</span>
<span class="token keyword">let</span> json1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">33</span><span class="token punctuation">,</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">66</span><span class="token punctuation">}</span>
<span class="token keyword">let</span> json2 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token operator">...</span>json1<span class="token punctuation">,</span> <span class="token literal-property property">d</span><span class="token operator">:</span> <span class="token number">88</span><span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>json2<span class="token punctuation">)</span>      <span class="token comment">//{a: 11, b: 33, c: 66, d: 88}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-\u8FED\u4EE3-es5" tabindex="-1"><a class="header-anchor" href="#_3-\u8FED\u4EE3-es5" aria-hidden="true">#</a> 3. \u8FED\u4EE3\uFF08ES5\uFF09</h3><table><thead><tr><th style="text-align:center;">\u8FD0\u7B97\u7B26</th><th>\u63CF\u8FF0</th></tr></thead><tbody><tr><td style="text-align:center;">map</td><td>\u6620\u5C04\uFF1A\u4E00 \u4E00\u5BF9\u5E94\uFF0C\u5982\uFF1A[56, 45, 76, 88, 99, 38] =&gt; [\u4E0D\u53CA\u683C\uFF0C\u4E0D\u53CA\u683C\uFF0C\u53CA\u683C\uFF0C\u53CA\u683C\uFF0C\u53CA\u683C\uFF0C\u4E0D\u53CA\u683C]</td></tr><tr><td style="text-align:center;">reduce</td><td>n =&gt; 1, \u5982\uFF1Asum(1, 2, 3) =&gt; 6</td></tr><tr><td style="text-align:center;">filter</td><td>\u8FC7\u6EE4</td></tr><tr><td style="text-align:center;">forEach</td><td>\u904D\u5386</td></tr></tbody></table><p><strong>\uFF081\uFF09map</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">56</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">76</span><span class="token punctuation">,</span> <span class="token number">88</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">,</span> <span class="token number">38</span><span class="token punctuation">]</span> 
<span class="token keyword">let</span> arr1 <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>item <span class="token operator">&gt;=</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;\u53CA\u683C&quot;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;\u4E0D\u53CA\u683C&quot;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr1<span class="token punctuation">)</span>  <span class="token comment">// [&quot;\u4E0D\u53CA\u683C&quot;, &quot;\u4E0D\u53CA\u683C&quot;, &quot;\u53CA\u683C&quot;, &quot;\u53CA\u683C&quot;, &quot;\u53CA\u683C&quot;, &quot;\u4E0D\u53CA\u683C&quot;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\uFF082\uFF09reduce</strong></p><p><img src="`+i+`" alt="" loading="lazy"></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> average <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">tmp<span class="token punctuation">,</span> item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">==</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment">//\u6570\u7EC4\u51716\u4E2A\u6570\uFF0C\u6267\u884C5\u6B21</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>tmp <span class="token operator">+</span> item<span class="token punctuation">)</span> <span class="token operator">/</span> arr<span class="token punctuation">.</span>length
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> tmp <span class="token operator">+</span> item
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>average<span class="token punctuation">)</span>  <span class="token comment">//67</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\uFF083\uFF09filter</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//filter</span>
arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">56</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">76</span><span class="token punctuation">,</span> <span class="token number">88</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">,</span> <span class="token number">38</span><span class="token punctuation">]</span> 
<span class="token keyword">let</span> arr2 <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>  <span class="token comment">//\u8FC7\u6EE4\u6389\u5947\u6570</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>item <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token boolean">false</span> <span class="token operator">:</span> <span class="token boolean">true</span>    <span class="token comment">//\u53EF\u7B80\u5199\u4E3A return item % 2 == 0</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr2<span class="token punctuation">)</span>  <span class="token comment">//[56, 76, 88, 38]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\uFF084\uFF09forEach</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">56</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">76</span><span class="token punctuation">,</span> <span class="token number">88</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">,</span> <span class="token number">38</span><span class="token punctuation">]</span> 
arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u7B2C</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>index<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\u4E2A\uFF1A\u503C\u4E3A\uFF1A</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>item<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>  <span class="token comment">// \u7B2C0\u4E2A\uFF1A\u503C\u4E3A\uFF1A56   \u7B2C1\u4E2A\uFF1A\u503C\u4E3A\uFF1A45   ......</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token comment">//\u4F7F\u7528\u4E86\u6A21\u677F\u5B57\u7B26\u4E32\uFF0C\u53CD\u5355\u5F15\u53F7 \` \`</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-json\u548C\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#_4-json\u548C\u6570\u7EC4" aria-hidden="true">#</a> 4. JSON\u548C\u6570\u7EC4</h3><p><strong>\uFF081\uFF09json\u548C\u5B57\u7B26\u4E32\u7684\u76F8\u4E92\u8F6C\u6362</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// JSON \u5E8F\u5217\u5316\uFF08JSON-&gt;string\uFF09 \u548C \u89E3\u5E8F\u5217\u5316(string-&gt;JSON)</span>
<span class="token keyword">let</span> json <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Bob&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token literal-property property">sex</span><span class="token operator">:</span> <span class="token string">&quot;male&quot;</span><span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>json<span class="token punctuation">)</span>                      <span class="token comment">//{ name: &#39;Bob&#39;, age: 16, sex: &#39;male&#39; }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>json<span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token comment">//{&quot;name&quot;:&quot;Bob&quot;,&quot;age&quot;:16,&quot;sex&quot;:&quot;male&quot;}</span>

<span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;{&quot;name&quot;:&quot;Bob&quot;,&quot;age&quot;:16,&quot;sex&quot;:&quot;male&quot;}&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span>           <span class="token comment">// \u7B49\u4E8E json</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\uFF082\uFF09\u4F2A\u6570\u7EC4\u8F6C\u6362\u4E3A\u6570\u7EC4</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> oDivs <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
oDivs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>oDivs<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Array.from() \u5C06\u4F2A\u6570\u7EC4\u6216\u53EF\u904D\u5386\u5BF9\u8C61\u8F6C\u6362\u4E3A\u771F\u6B63\u7684\u6570\u7EC4</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//\u5B9A\u4E49\u4E00\u4E2A\u96C6\u5408</span>
<span class="token keyword">let</span> arrayLike <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&#39;0&#39;</span><span class="token operator">:</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&#39;1&#39;</span><span class="token operator">:</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&#39;2&#39;</span><span class="token operator">:</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">length</span><span class="token operator">:</span> <span class="token number">3</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span> 
<span class="token comment">//\u8F6C\u6210\u6570\u7EC4</span>
<span class="token keyword">let</span> arr2 <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>arrayLike<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u65B9\u6CD5\u8FD8\u53EF\u4EE5\u63A5\u53D7\u7B2C\u4E8C\u4E2A\u53C2\u6570\uFF0C\u4F5C\u7528\u7C7B\u4F3C\u4E8E\u6570\u7EC4\u7684map\u65B9\u6CD5\uFF0C\u7528\u6765\u5BF9\u6BCF\u4E2A\u5143\u7D20\u8FDB\u884C\u5904\u7406\uFF0C\u5C06\u5904\u7406\u540E\u7684\u503C\u653E\u5165\u8FD4\u56DE\u7684\u6570\u7EC4</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> <span class="token keyword">let</span> arrayLike <span class="token operator">=</span> <span class="token punctuation">{</span> 
     <span class="token string-property property">&quot;0&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
     <span class="token string-property property">&quot;1&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
     <span class="token string-property property">&quot;length&quot;</span><span class="token operator">:</span> <span class="token number">2</span>
 <span class="token punctuation">}</span>
 <span class="token keyword">let</span> newAry <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>arrayLike<span class="token punctuation">,</span> <span class="token parameter">item</span> <span class="token operator">=&gt;</span> item <span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token comment">//[2,4]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\uFF083\uFF09\u5176\u4ED6\u6570\u7EC4\u65B9\u6CD5</strong></p><p>find() \u7528\u4E8E\u627E\u51FA\u7B2C\u4E00\u4E2A\u7B26\u5408\u6761\u4EF6\u7684\u6570\u7EC4\u6210\u5458\uFF0C\u5982\u679C\u6CA1\u6709\u627E\u5230\u8FD4\u56DEundefined</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> ary <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>
     <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
     <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span>
 <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> 
     <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
     <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;\u674E\u56DB&#39;</span>
 <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span> 
 <span class="token keyword">let</span> target <span class="token operator">=</span> ary<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> item<span class="token punctuation">.</span>id <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u627E\u6570\u7EC4\u91CC\u9762\u7B26\u5408\u6761\u4EF6\u7684\u503C\uFF0C\u5F53\u6570\u7EC4\u4E2D\u5143\u7D20id\u7B49\u4E8E2\u7684\u67E5\u627E\u51FA\u6765\uFF0C\u6CE8\u610F\uFF0C\u53EA\u4F1A\u5339\u914D\u7B2C\u4E00\u4E2A</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>findIndex() \u7528\u4E8E\u627E\u51FA\u7B2C\u4E00\u4E2A\u7B26\u5408\u6761\u4EF6\u7684\u6570\u7EC4\u6210\u5458\u7684\u4F4D\u7F6E\uFF0C\u5982\u679C\u6CA1\u6709\u627E\u5230\u8FD4\u56DE-1</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> ary <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> index <span class="token operator">=</span> ary<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> value <span class="token operator">&gt;</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>includes() \u5224\u65AD\u67D0\u4E2A\u6570\u7EC4\u662F\u5426\u5305\u542B\u7ED9\u5B9A\u7684\u503C\uFF0C\u8FD4\u56DE\u5E03\u5C14\u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">// true </span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-\u7C7B\u548C\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#_5-\u7C7B\u548C\u5BF9\u8C61" aria-hidden="true">#</a> 5. \u7C7B\u548C\u5BF9\u8C61</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//\u4EE5\u4E0B\u4EE3\u7801\u662F\u5BF9\u5BF9\u8C61\u7684\u590D\u4E60\uFF0Ces6\u4E4B\u524D\u7684\u5BF9\u8C61</span>
<span class="token comment">//\u5B57\u9762\u91CF\u521B\u5EFA\u5BF9\u8C61</span>
<span class="token keyword">var</span> ldh <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;\u5218\u5FB7\u534E&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ldh<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//\u6784\u9020\u51FD\u6570\u521B\u5EFA\u5BF9\u8C61</span>
  <span class="token keyword">function</span> <span class="token function">Star</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
<span class="token keyword">var</span> ldh <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Star</span><span class="token punctuation">(</span><span class="token string">&#39;\u5218\u5FB7\u534E&#39;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token comment">//\u5B9E\u4F8B\u5316\u5BF9\u8C61</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ldh<span class="token punctuation">)</span><span class="token punctuation">;</span>	
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u5728 ES6 \u4E2D\u65B0\u589E\u52A0\u4E86\u7C7B\u7684\u6982\u5FF5\uFF0C\u53EF\u4EE5\u4F7F\u7528 class \u5173\u952E\u5B57\u58F0\u660E\u4E00\u4E2A\u7C7B\uFF0C\u4E4B\u540E\u4EE5\u8FD9\u4E2A\u7C7B\u6765\u5B9E\u4F8B\u5316\u5BF9\u8C61\u3002</li></ul><ol><li>\u8BED\u6CD5:</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//\u6B65\u9AA41 \u4F7F\u7528class\u5173\u952E\u5B57</span>
<span class="token keyword">class</span> <span class="token class-name">name</span> <span class="token punctuation">{</span>
  <span class="token comment">// class body</span>
<span class="token punctuation">}</span>     
<span class="token comment">//\u6B65\u9AA42\u4F7F\u7528\u5B9A\u4E49\u7684\u7C7B\u521B\u5EFA\u5B9E\u4F8B  \u6CE8\u610Fnew\u5173\u952E\u5B57</span>
<span class="token keyword">var</span> xx <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>\u793A\u4F8B</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> <span class="token comment">// 1. \u521B\u5EFA\u7C7B class  \u521B\u5EFA\u4E00\u4E2A \u660E\u661F\u7C7B</span>
 <span class="token keyword">class</span> <span class="token class-name">Star</span> <span class="token punctuation">{</span>
   <span class="token comment">// \u7C7B\u7684\u5171\u6709\u5C5E\u6027\u653E\u5230 constructor \u91CC\u9762</span>
   <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
   <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
 <span class="token punctuation">}</span>
   <span class="token comment">// 2. \u5229\u7528\u7C7B\u521B\u5EFA\u5BF9\u8C61 new</span>
   <span class="token keyword">var</span> ldh <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Star</span><span class="token punctuation">(</span><span class="token string">&#39;\u5218\u5FB7\u534E&#39;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ldh<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u7C7B\u521B\u5EFA\u6DFB\u52A0\u5C5E\u6027\u548C\u65B9\u6CD5</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> <span class="token comment">// 1. \u521B\u5EFA\u7C7B class  \u521B\u5EFA\u4E00\u4E2A\u7C7B</span>
<span class="token keyword">class</span> <span class="token class-name">Star</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u7C7B\u7684\u5171\u6709\u5C5E\u6027\u653E\u5230 constructor \u91CC\u9762 constructor\u662F \u6784\u9020\u5668\u6216\u8005\u6784\u9020\u51FD\u6570</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">uname<span class="token punctuation">,</span> age</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>uname <span class="token operator">=</span> uname<span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token comment">//-------------------------------------------&gt;\u6CE8\u610F,\u65B9\u6CD5\u4E0E\u65B9\u6CD5\u4E4B\u95F4\u4E0D\u9700\u8981\u6DFB\u52A0\u9017\u53F7</span>
    <span class="token function">sing</span><span class="token punctuation">(</span><span class="token parameter">song</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>uname <span class="token operator">+</span> <span class="token string">&#39;\u5531&#39;</span> <span class="token operator">+</span> song<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// 2. \u5229\u7528\u7C7B\u521B\u5EFA\u5BF9\u8C61 new</span>
<span class="token keyword">var</span> ldh <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Star</span><span class="token punctuation">(</span><span class="token string">&#39;\u5218\u5FB7\u534E&#39;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ldh<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Star {uname: &quot;\u5218\u5FB7\u534E&quot;, age: 18}</span>
ldh<span class="token punctuation">.</span><span class="token function">sing</span><span class="token punctuation">(</span><span class="token string">&#39;\u51B0\u96E8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5218\u5FB7\u534E\u5531\u51B0\u96E8</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u6CE8\u610F:</strong></p><ol><li>\u901A\u8FC7class \u5173\u952E\u5B57\u521B\u5EFA\u7C7B, \u7C7B\u540D\u6211\u4EEC\u8FD8\u662F\u4E60\u60EF\u6027\u5B9A\u4E49\u9996\u5B57\u6BCD\u5927\u5199</li><li>\u7C7B\u91CC\u9762\u6709\u4E2Aconstructor \u51FD\u6570,\u53EF\u4EE5\u63A5\u53D7\u4F20\u9012\u8FC7\u6765\u7684\u53C2\u6570,\u540C\u65F6\u8FD4\u56DE\u5B9E\u4F8B\u5BF9\u8C61</li><li>constructor \u51FD\u6570 \u53EA\u8981 new \u751F\u6210\u5B9E\u4F8B\u65F6,\u5C31\u4F1A\u81EA\u52A8\u8C03\u7528\u8FD9\u4E2A\u51FD\u6570, \u5982\u679C\u6211\u4EEC\u4E0D\u5199\u8FD9\u4E2A\u51FD\u6570,\u7C7B\u4E5F\u4F1A\u81EA\u52A8\u751F\u6210\u8FD9\u4E2A\u51FD\u6570</li><li>\u591A\u4E2A\u51FD\u6570\u65B9\u6CD5\u4E4B\u95F4\u4E0D\u9700\u8981\u6DFB\u52A0\u9017\u53F7\u5206\u9694</li><li>\u751F\u6210\u5B9E\u4F8B new \u4E0D\u80FD\u7701\u7565</li><li>\u8BED\u6CD5\u89C4\u8303, \u521B\u5EFA\u7C7B \u7C7B\u540D\u540E\u9762\u4E0D\u8981\u52A0\u5C0F\u62EC\u53F7,\u751F\u6210\u5B9E\u4F8B \u7C7B\u540D\u540E\u9762\u52A0\u5C0F\u62EC\u53F7, \u6784\u9020\u51FD\u6570\u4E0D\u9700\u8981\u52A0function</li></ol><p><strong>\u7C7B\u7684\u7EE7\u627F</strong></p><ol><li>\u8BED\u6CD5</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u7236\u7C7B</span>
<span class="token keyword">class</span> <span class="token class-name">Father</span><span class="token punctuation">{</span>   
<span class="token punctuation">}</span> 

<span class="token comment">// \u5B50\u7C7B\u7EE7\u627F\u7236\u7C7B</span>
<span class="token keyword">class</span>  <span class="token class-name">Son</span>  <span class="token keyword">extends</span> <span class="token class-name">Father</span> <span class="token punctuation">{</span>  
<span class="token punctuation">}</span>       
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>\u793A\u4F8B</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Father</span> <span class="token punctuation">{</span>
      <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">surname</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>surname<span class="token operator">=</span> surname<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u4F60\u7684\u59D3\u662F&#39;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>surname<span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Son</span> <span class="token keyword">extends</span> <span class="token class-name">Father</span><span class="token punctuation">{</span>  <span class="token comment">// \u8FD9\u6837\u5B50\u7C7B\u5C31\u7EE7\u627F\u4E86\u7236\u7C7B\u7684\u5C5E\u6027\u548C\u65B9\u6CD5</span>
<span class="token punctuation">}</span>
<span class="token keyword">var</span> damao<span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Son</span><span class="token punctuation">(</span><span class="token string">&#39;\u5218&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
damao<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">//\u7ED3\u679C\u4E3A \u4F60\u7684\u59D3\u662F\u5218</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u5B50\u7C7B\u4F7F\u7528super\u5173\u952E\u5B57\u8BBF\u95EE\u7236\u7C7B\u7684\u65B9\u6CD5</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token comment">//\u5B9A\u4E49\u4E86\u7236\u7C7B</span>
  <span class="token keyword">class</span> <span class="token class-name">Father</span> <span class="token punctuation">{</span>
     <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> x<span class="token punctuation">;</span>
     <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> y<span class="token punctuation">;</span>
     <span class="token punctuation">}</span>
     <span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>
  	<span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
  <span class="token comment">//\u5B50\u5143\u7D20\u7EE7\u627F\u7236\u7C7B</span>
      <span class="token keyword">class</span> <span class="token class-name">Son</span> <span class="token keyword">extends</span> <span class="token class-name">Father</span> <span class="token punctuation">{</span>
     		 <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      		<span class="token keyword">super</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u4F7F\u7528super\u8C03\u7528\u4E86\u7236\u7C7B\u4E2D\u7684\u6784\u9020\u51FD\u6570</span>
      	<span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">var</span> son <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Son</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      son<span class="token punctuation">.</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u7ED3\u679C\u4E3A3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u6CE8\u610F:</strong></p><ol><li><p>\u7EE7\u627F\u4E2D,\u5982\u679C\u5B9E\u4F8B\u5316\u5B50\u7C7B\u8F93\u51FA\u4E00\u4E2A\u65B9\u6CD5,\u5148\u770B\u5B50\u7C7B\u6709\u6CA1\u6709\u8FD9\u4E2A\u65B9\u6CD5,\u5982\u679C\u6709\u5C31\u5148\u6267\u884C\u5B50\u7C7B\u7684</p></li><li><p>\u7EE7\u627F\u4E2D,\u5982\u679C\u5B50\u7C7B\u91CC\u9762\u6CA1\u6709,\u5C31\u53BB\u67E5\u627E\u7236\u7C7B\u6709\u6CA1\u6709\u8FD9\u4E2A\u65B9\u6CD5,\u5982\u679C\u6709,\u5C31\u6267\u884C\u7236\u7C7B\u7684\u8FD9\u4E2A\u65B9\u6CD5(\u5C31\u8FD1\u539F\u5219)</p></li><li><p>\u5982\u679C\u5B50\u7C7B\u60F3\u8981\u7EE7\u627F\u7236\u7C7B\u7684\u65B9\u6CD5,\u540C\u65F6\u5728\u81EA\u5DF1\u5185\u90E8\u6269\u5C55\u81EA\u5DF1\u7684\u65B9\u6CD5,\u5229\u7528super \u8C03\u7528\u7236\u7C7B\u7684\u6784\u9020\u51FD\u6570,super \u5FC5\u987B\u5728\u5B50\u7C7Bthis\u4E4B\u524D\u8C03\u7528</p></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>      <span class="token comment">// \u7236\u7C7B\u6709\u52A0\u6CD5\u65B9\u6CD5</span>
      <span class="token keyword">class</span> <span class="token class-name">Father</span> <span class="token punctuation">{</span>
        <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> x<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> y<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u5B50\u7C7B\u7EE7\u627F\u7236\u7C7B\u52A0\u6CD5\u65B9\u6CD5 \u540C\u65F6 \u6269\u5C55\u51CF\u6CD5\u65B9\u6CD5</span>
      <span class="token keyword">class</span> <span class="token class-name">Son</span> <span class="token keyword">extends</span> <span class="token class-name">Father</span> <span class="token punctuation">{</span>
        <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5229\u7528super \u8C03\u7528\u7236\u7C7B\u7684\u6784\u9020\u51FD\u6570 super \u5FC5\u987B\u5728\u5B50\u7C7Bthis\u4E4B\u524D\u8C03\u7528,\u653E\u5230this\u4E4B\u540E\u4F1A\u62A5\u9519</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> x<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> y<span class="token punctuation">;</span>

       <span class="token punctuation">}</span>
       <span class="token function">subtract</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span>
     <span class="token punctuation">}</span>
     <span class="token keyword">var</span> son <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Son</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     son<span class="token punctuation">.</span><span class="token function">subtract</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//2</span>
     son<span class="token punctuation">.</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//8</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4E8C-\u6B63\u5219\u8868\u8FBE\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u4E8C-\u6B63\u5219\u8868\u8FBE\u5F0F" aria-hidden="true">#</a> \u4E8C \u6B63\u5219\u8868\u8FBE\u5F0F</h2><h3 id="_1-\u521B\u5EFA\u53CA\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#_1-\u521B\u5EFA\u53CA\u4F7F\u7528" aria-hidden="true">#</a> 1. \u521B\u5EFA\u53CA\u4F7F\u7528</h3><p>\u5728 JavaScript \u4E2D\uFF0C\u53EF\u4EE5\u901A\u8FC7\u4E24\u79CD\u65B9\u5F0F\u521B\u5EFA\u4E00\u4E2A\u6B63\u5219\u8868\u8FBE\u5F0F\u3002</p><p>\u65B9\u5F0F\u4E00\uFF1A\u901A\u8FC7\u8C03\u7528RegExp\u5BF9\u8C61\u7684\u6784\u9020\u51FD\u6570\u521B\u5EFA</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> regexp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">123</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>regexp<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u65B9\u5F0F\u4E8C\uFF1A\u5229\u7528\u5B57\u9762\u91CF\u521B\u5EFA \u6B63\u5219\u8868\u8FBE\u5F0F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> <span class="token keyword">var</span> rg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">123</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>test() \u6B63\u5219\u5BF9\u8C61\u65B9\u6CD5\uFF0C\u7528\u4E8E\u68C0\u6D4B\u5B57\u7B26\u4E32\u662F\u5426\u7B26\u5408\u8BE5\u89C4\u5219\uFF0C\u8BE5\u5BF9\u8C61\u4F1A\u8FD4\u56DE true \u6216 false\uFF0C\u5176\u53C2\u6570\u662F\u6D4B\u8BD5\u5B57\u7B26\u4E32\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> rg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">123</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>rg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u5339\u914D\u5B57\u7B26\u4E2D\u662F\u5426\u51FA\u73B0123  \u51FA\u73B0\u7ED3\u679C\u4E3Atrue</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>rg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;abc&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u5339\u914D\u5B57\u7B26\u4E2D\u662F\u5426\u51FA\u73B0123 \u672A\u51FA\u73B0\u7ED3\u679C\u4E3Afalse</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-\u7279\u6B8A\u5B57\u7B26" tabindex="-1"><a class="header-anchor" href="#_2-\u7279\u6B8A\u5B57\u7B26" aria-hidden="true">#</a> 2. \u7279\u6B8A\u5B57\u7B26</h3><ul><li>\u7279\u6B8A\u5B57\u7B26\u4E5F\u88AB\u79F0\u4E3A<strong>\u5143\u5B57\u7B26</strong>\uFF0C\u5728\u6B63\u5219\u8868\u8FBE\u5F0F\u4E2D\u662F\u5177\u6709\u7279\u6B8A\u610F\u4E49\u7684\u4E13\u7528\u7B26\u53F7\uFF0C\u5982 ^ \u3001$ \u3001+ \u7B49\u3002</li></ul>`,74),w=s("\u53C2\u8003\uFF1A "),j={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions",target:"_blank",rel:"noopener noreferrer"},_=s("MDN"),q=n("p",null,"jQuery \u624B\u518C\uFF1A\u6B63\u5219\u8868\u8FBE\u5F0F\u90E8\u5206",-1),S={href:"http://tool.oschina.net/regex",target:"_blank",rel:"noopener noreferrer"},E=s("\u6B63\u5219\u6D4B\u8BD5\u5DE5\u5177"),F=p(`<ol><li>\u5927\u62EC\u53F7 \u91CF\u8BCD\u7B26. \u91CC\u9762\u8868\u793A\u91CD\u590D\u6B21\u6570</li><li>\u4E2D\u62EC\u53F7 \u5B57\u7B26\u96C6\u5408\u3002\u5339\u914D\u65B9\u62EC\u53F7\u4E2D\u7684\u4EFB\u610F\u5B57\u7B26.</li><li>\u5C0F\u62EC\u53F7\u8868\u793A\u4F18\u5148\u7EA7</li></ol><p><strong>\uFF081\uFF09\u8FB9\u754C\u7B26</strong></p><p>\u6B63\u5219\u8868\u8FBE\u5F0F\u4E2D\u7684\u8FB9\u754C\u7B26\uFF08\u4F4D\u7F6E\u7B26\uFF09\u7528\u6765\u63D0\u793A\u5B57\u7B26\u6240\u5904\u7684\u4F4D\u7F6E\uFF0C\u4E3B\u8981\u6709\u4E24\u4E2A\u5B57\u7B26</p><table><thead><tr><th>\u8FB9\u754C\u7B26</th><th>\u8BF4\u660E</th></tr></thead><tbody><tr><td>^</td><td>\u8868\u793A\u5339\u914D\u884C\u9996\u7684\u6587\u672C\uFF08\u4EE5\u8C01\u5F00\u59CB\uFF09</td></tr><tr><td>$</td><td>\u8868\u793A\u5339\u914D\u884C\u5C3E\u7684\u6587\u672C\uFF08\u4EE5\u8C01\u7ED3\u675F\uFF09</td></tr></tbody></table><p>\u5982\u679C ^\u548C $ \u5728\u4E00\u8D77\uFF0C\u8868\u793A\u5FC5\u987B\u662F\u7CBE\u786E\u5339\u914D\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> rg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">abc</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span> <span class="token comment">// \u6B63\u5219\u8868\u8FBE\u5F0F\u91CC\u9762\u4E0D\u9700\u8981\u52A0\u5F15\u53F7 \u4E0D\u7BA1\u662F\u6570\u5B57\u578B\u8FD8\u662F\u5B57\u7B26\u4E32\u578B</span>
<span class="token comment">// /abc/ \u53EA\u8981\u5305\u542B\u6709abc\u8FD9\u4E2A\u5B57\u7B26\u4E32\u8FD4\u56DE\u7684\u90FD\u662Ftrue</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>rg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;abc&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>rg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;abcd&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>rg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;aabcd&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;---------------------------&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^abc</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;abc&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;abcd&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;aabcd&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;---------------------------&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> reg1 <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^abc$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span> <span class="token comment">// \u7CBE\u786E\u5339\u914D \u8981\u6C42\u5FC5\u987B\u662F abc\u5B57\u7B26\u4E32\u624D\u7B26\u5408\u89C4\u8303</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>reg1<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;abc&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>reg1<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;abcd&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>reg1<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;aabcd&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>reg1<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;abcabc&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\uFF082\uFF09\u5B57\u7B26\u7C7B</strong> \u5B57\u7B26\u7C7B\u8868\u793A\u6709\u4E00\u7CFB\u5217\u5B57\u7B26\u53EF\u4F9B\u9009\u62E9\uFF0C\u53EA\u8981\u5339\u914D\u5176\u4E2D\u4E00\u4E2A\u5C31\u53EF\u4EE5\u4E86\u3002\u6240\u6709\u53EF\u4F9B\u9009\u62E9\u7684\u5B57\u7B26\u90FD\u653E\u5728\u65B9\u62EC\u53F7\u5185\u3002</p><p>**2.1 \u65B9\u62EC\u53F7 ** \u8868\u793A\u6709\u4E00\u7CFB\u5217\u5B57\u7B26\u53EF\u4F9B\u9009\u62E9\uFF0C\u53EA\u8981\u5339\u914D\u5176\u4E2D\u4E00\u4E2A\u5C31\u53EF\u4EE5\u4E86</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> rg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[abc]</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span> <span class="token comment">// \u53EA\u8981\u5305\u542B\u6709a \u6216\u8005 \u5305\u542B\u6709b \u6216\u8005\u5305\u542B\u6709c \u90FD\u8FD4\u56DE\u4E3Atrue</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>rg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;andy&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>rg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;baby&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>rg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;color&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>rg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;red&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//false</span>
<span class="token keyword">var</span> rg1 <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[abc]$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span> <span class="token comment">// \u4E09\u9009\u4E00 \u53EA\u6709\u662Fa \u6216\u8005\u662F b  \u6216\u8005\u662Fc \u8FD9\u4E09\u4E2A\u5B57\u6BCD\u624D\u8FD4\u56DE true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>rg1<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;aa&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>rg1<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>rg1<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>rg1<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>rg1<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;abc&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//true</span>
<span class="token comment">// ----------------------------------------------------------------------------------</span>
<span class="token keyword">var</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-z]$</span><span class="token regex-delimiter">/</span></span> <span class="token comment">//26\u4E2A\u82F1\u6587\u5B57\u6BCD\u4EFB\u4F55\u4E00\u4E2A\u5B57\u6BCD\u8FD4\u56DE true  - \u8868\u793A\u7684\u662Fa \u5230z \u7684\u8303\u56F4  </span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;z&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//false</span>
<span class="token comment">// -----------------------------------------------------------------------------------</span>
<span class="token comment">//\u5B57\u7B26\u7EC4\u5408</span>
<span class="token keyword">var</span> reg1 <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-zA-Z0-9]$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span> <span class="token comment">// 26\u4E2A\u82F1\u6587\u5B57\u6BCD(\u5927\u5199\u548C\u5C0F\u5199\u90FD\u53EF\u4EE5)\u4EFB\u4F55\u4E00\u4E2A\u5B57\u6BCD\u8FD4\u56DE true  </span>
<span class="token comment">// ------------------------------------------------------------------------------------</span>
<span class="token comment">//\u53D6\u53CD \u65B9\u62EC\u53F7\u5185\u90E8\u52A0\u4E0A ^ \u8868\u793A\u53D6\u53CD\uFF0C\u53EA\u8981\u5305\u542B\u65B9\u62EC\u53F7\u5185\u7684\u5B57\u7B26\uFF0C\u90FD\u8FD4\u56DE false \u3002</span>
<span class="token keyword">var</span> reg2 <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[^a-zA-Z0-9]$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>reg2<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>reg2<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;B&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>reg2<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>reg2<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2.2 \u91CF\u8BCD\u7B26</strong></p><p>\u91CF\u8BCD\u7B26\u7528\u6765\u8BBE\u5B9A\u67D0\u4E2A\u6A21\u5F0F\u51FA\u73B0\u7684\u6B21\u6570\u3002</p>`,11),z=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"\u91CF\u8BCD"),n("th",null,"\u8BF4\u660E")])]),n("tbody",null,[n("tr",null,[n("td",null,"*"),n("td",null,"\u91CD\u590D0\u6B21\u6216\u66F4\u591A\u6B21")]),n("tr",null,[n("td",null,"+"),n("td",null,"\u91CD\u590D1\u6B21\u6216\u66F4\u591A\u6B21")]),n("tr",null,[n("td",null,"?"),n("td",null,"\u91CD\u590D0\u6B21\u62161\u6B21")]),n("tr",null,[n("td",{n:""}),n("td",null,"\u91CD\u590Dn\u6B21")]),n("tr",null,[n("td",{"n,":""}),n("td",null,"\u91CD\u590Dn\u6B21\u6216\u66F4\u591A\u6B21")]),n("tr",null,[n("td",{"n,m":""}),n("td",null,"\u91CD\u590Dn\u5230m\u6B21")])])],-1),N=p('<p><strong>\uFF083\uFF09\u9884\u5B9A\u4E49\u7C7B</strong> \u9884\u5B9A\u4E49\u7C7B\u6307\u7684\u662F\u67D0\u4E9B\u5E38\u89C1\u6A21\u5F0F\u7684\u7B80\u5199\u65B9\u5F0F. <img src="'+u+`" alt="" loading="lazy"></p><p><strong>\u9A8C\u8BC1\u5EA7\u673A\u53F7\u7801</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\d{3}-\\d{8}|\\d{4}-\\d{7}$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
<span class="token keyword">var</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\d{3,4}-\\d{7,8}$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-\u6B63\u5219\u66FF\u6362" tabindex="-1"><a class="header-anchor" href="#_3-\u6B63\u5219\u66FF\u6362" aria-hidden="true">#</a> 3. \u6B63\u5219\u66FF\u6362</h3><p>replace() \u65B9\u6CD5\u53EF\u4EE5\u5B9E\u73B0\u66FF\u6362\u5B57\u7B26\u4E32\u64CD\u4F5C\uFF0C\u7528\u6765\u66FF\u6362\u7684\u53C2\u6570\u53EF\u4EE5\u662F\u4E00\u4E2A\u5B57\u7B26\u4E32\u6216\u662F\u4E00\u4E2A\u6B63\u5219\u8868\u8FBE\u5F0F\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;andy\u548Cred&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> newStr <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&#39;andy&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;baby&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newStr<span class="token punctuation">)</span><span class="token comment">//baby\u548Cred</span>
<span class="token comment">//\u7B49\u540C\u4E8E \u6B64\u5904\u7684andy\u53EF\u4EE5\u5199\u5728\u6B63\u5219\u8868\u8FBE\u5F0F\u5185</span>
<span class="token keyword">var</span> newStr2 <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">andy</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&#39;baby&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newStr2<span class="token punctuation">)</span><span class="token comment">//baby\u548Cred</span>
<span class="token comment">//\u5168\u90E8\u66FF\u6362</span>
<span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;abcabc&#39;</span>
<span class="token keyword">var</span> nStr <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">a</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span><span class="token string">&#39;\u54C8\u54C8&#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>nStr<span class="token punctuation">)</span> <span class="token comment">//\u54C8\u54C8bcabc</span>

<span class="token comment">//\u5168\u90E8\u66FF\u6362g</span>
<span class="token keyword">var</span> nStr <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">a</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span><span class="token string">&#39;\u54C8\u54C8&#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>nStr<span class="token punctuation">)</span> <span class="token comment">//\u54C8\u54C8bc\u54C8\u54C8bc</span>

<span class="token comment">//\u5FFD\u7565\u5927\u5C0F\u5199i</span>
<span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;aAbcAba&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> newStr <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">a</span><span class="token regex-delimiter">/</span><span class="token regex-flags">gi</span></span><span class="token punctuation">,</span><span class="token string">&#39;\u54C8\u54C8&#39;</span><span class="token punctuation">)</span><span class="token comment">//&quot;\u54C8\u54C8\u54C8\u54C8bc\u54C8\u54C8b\u54C8\u54C8&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u6848\u4F8B:\u8FC7\u6EE4\u654F\u611F\u8BCD\u6C47</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">&lt;</span>textarea name<span class="token operator">=</span><span class="token string">&quot;&quot;</span> id<span class="token operator">=</span><span class="token string">&quot;message&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>textarea<span class="token operator">&gt;</span> 
<span class="token operator">&lt;</span>button<span class="token operator">&gt;</span>\u63D0\u4EA4<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>div<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>
    <span class="token keyword">var</span> text <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;textarea&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;button&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> div <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    btn<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    	div<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> text<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\u6FC0\u60C5|gay</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;**&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4E09-\u5F02\u6B65\u7F16\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u4E09-\u5F02\u6B65\u7F16\u7A0B" aria-hidden="true">#</a> \u4E09 \u5F02\u6B65\u7F16\u7A0B</h2><h3 id="_1-\u56DE\u8C03\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#_1-\u56DE\u8C03\u51FD\u6570" aria-hidden="true">#</a> 1. \u56DE\u8C03\u51FD\u6570</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&#39;./1.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> result1</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result1<span class="token punctuation">)</span>
	fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&#39;./2.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> result2</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result2<span class="token punctuation">)</span>
		fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&#39;./3.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> result3</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result3<span class="token punctuation">)</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-promise" tabindex="-1"><a class="header-anchor" href="#_2-promise" aria-hidden="true">#</a> 2. promise</h3><p><img src="`+r+`" alt="" loading="lazy"></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">p1</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&#39;./1.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
			<span class="token function">resolve</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">p2</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&#39;./2.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
			<span class="token function">resolve</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">p3</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&#39;./3.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
			<span class="token function">resolve</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">p1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">r1</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r1<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token function">p2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">r2</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r2<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token function">p3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">r3</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r3<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-async-await" tabindex="-1"><a class="header-anchor" href="#_3-async-await" aria-hidden="true">#</a> 3. async/await</h3><p><img src="`+k+'" alt="" loading="lazy"><img src="'+d+`" alt="" loading="lazy"></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u6539\u9020\u73B0\u6709\u5F02\u6B65\u51FD\u6570api \u8BA9\u5176\u8FD4\u56DEpromise\u5BF9\u8C61 \u4ECE\u800C\u652F\u6301\u5F02\u6B65\u51FD\u6570\u8BED\u6CD5</span>
<span class="token keyword">const</span> promisify <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;util&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>promisify<span class="token punctuation">;</span>
<span class="token comment">// \u8C03\u7528promisify\u65B9\u6CD5\u6539\u9020\u73B0\u6709\u5F02\u6B65API \u8BA9\u5176\u8FD4\u56DEpromise\u5BF9\u8C61</span>
<span class="token keyword">const</span> readFile <span class="token operator">=</span> <span class="token function">promisify</span><span class="token punctuation">(</span>fs<span class="token punctuation">.</span>readFile<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">run</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">let</span> r1 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&#39;./1.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span>
	<span class="token keyword">let</span> r2 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&#39;./2.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span>
	<span class="token keyword">let</span> r3 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&#39;./3.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r1<span class="token punctuation">)</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r2<span class="token punctuation">)</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r3<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17);function A($,B){const a=l("ExternalLinkIcon");return o(),c("div",null,[m,b,g,n("p",null,[f,n("a",y,[h,t(a)])]),x,n("p",null,[w,n("a",j,[_,t(a)])]),q,n("p",null,[n("a",S,[E,t(a)])]),F,z,N])}var O=e(v,[["render",A],["__file","ES6.html.vue"]]);export{O as default};
